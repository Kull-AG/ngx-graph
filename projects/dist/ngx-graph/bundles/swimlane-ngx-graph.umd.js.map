{"version":3,"file":"swimlane-ngx-graph.umd.js.map","sources":[null,"ng://@swimlane/ngx-graph/lib/utils/id.ts","ng://@swimlane/ngx-graph/lib/graph/layouts/dagre.ts","ng://@swimlane/ngx-graph/lib/graph/layouts/dagreCluster.ts","ng://@swimlane/ngx-graph/lib/graph/layouts/dagreNodesOnly.ts","ng://@swimlane/ngx-graph/lib/graph/layouts/d3ForceDirected.ts","ng://@swimlane/ngx-graph/lib/graph/layouts/layout.service.ts","ng://@swimlane/ngx-graph/lib/graph/graph.component.ts","ng://@swimlane/ngx-graph/lib/graph/mouse-wheel.directive.ts","ng://@swimlane/ngx-graph/lib/graph/graph.module.ts","ng://@swimlane/ngx-graph/lib/ngx-graph.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","const cache = {};\r\n\r\n/**\r\n * Generates a short id.\r\n *\r\n */\r\nexport function id(): string {\r\n  let newId = ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\r\n\r\n  newId = `a${newId}`;\r\n\r\n  // ensure not already used\r\n  if (!cache[newId]) {\r\n    cache[newId] = true;\r\n    return newId;\r\n  }\r\n\r\n  return id();\r\n}\r\n","import { Layout } from '../../models/layout.model';\r\nimport { Graph } from '../../models/graph.model';\r\nimport { id } from '../../utils/id';\r\nimport * as dagre from 'dagre';\r\nimport { Edge } from '../../models/edge.model';\r\n\r\nexport enum Orientation {\r\n  LEFT_TO_RIGHT = 'LR',\r\n  RIGHT_TO_LEFT = 'RL',\r\n  TOP_TO_BOTTOM = 'TB',\r\n  BOTTOM_TO_TOM = 'BT'\r\n}\r\nexport enum Alignment {\r\n  CENTER = 'C',\r\n  UP_LEFT = 'UL',\r\n  UP_RIGHT = 'UR',\r\n  DOWN_LEFT = 'DL',\r\n  DOWN_RIGHT = 'DR'\r\n}\r\n\r\nexport interface DagreSettings {\r\n  orientation?: Orientation;\r\n  marginX?: number;\r\n  marginY?: number;\r\n  edgePadding?: number;\r\n  rankPadding?: number;\r\n  nodePadding?: number;\r\n  align?: Alignment;\r\n  acyclicer?: 'greedy' | undefined;\r\n  ranker?: 'network-simplex' | 'tight-tree' | 'longest-path';\r\n}\r\n\r\nexport class DagreLayout implements Layout {\r\n  defaultSettings: DagreSettings = {\r\n    orientation: Orientation.LEFT_TO_RIGHT,\r\n    marginX: 20,\r\n    marginY: 20,\r\n    edgePadding: 100,\r\n    rankPadding: 100,\r\n    nodePadding: 50\r\n  };\r\n  settings: DagreSettings = {};\r\n\r\n  dagreGraph: any;\r\n  dagreNodes: any;\r\n  dagreEdges: any;\r\n\r\n  run(graph: Graph): Graph {\r\n    this.createDagreGraph(graph);\r\n    dagre.layout(this.dagreGraph);\r\n\r\n    graph.edgeLabels = this.dagreGraph._edgeLabels;\r\n\r\n    for (const dagreNodeId in this.dagreGraph._nodes) {\r\n      const dagreNode = this.dagreGraph._nodes[dagreNodeId];\r\n      const node = graph.nodes.find(n => n.id === dagreNode.id);\r\n      node.position = {\r\n        x: dagreNode.x,\r\n        y: dagreNode.y\r\n      };\r\n      node.dimension = {\r\n        width: dagreNode.width,\r\n        height: dagreNode.height\r\n      };\r\n    }\r\n\r\n    return graph;\r\n  }\r\n\r\n  updateEdge(graph: Graph, edge: Edge): Graph {\r\n    const sourceNode = graph.nodes.find(n => n.id === edge.source);\r\n    const targetNode = graph.nodes.find(n => n.id === edge.target);\r\n\r\n    // determine new arrow position\r\n    const dir = sourceNode.position.y <= targetNode.position.y ? -1 : 1;\r\n    const startingPoint = {\r\n      x: sourceNode.position.x,\r\n      y: sourceNode.position.y - dir * (sourceNode.dimension.height / 2)\r\n    };\r\n    const endingPoint = {\r\n      x: targetNode.position.x,\r\n      y: targetNode.position.y + dir * (targetNode.dimension.height / 2)\r\n    };\r\n\r\n    // generate new points\r\n    edge.points = [startingPoint, endingPoint];\r\n    \r\n    return graph;\r\n  }\r\n\r\n  createDagreGraph(graph: Graph): any {\r\n    this.dagreGraph = new dagre.graphlib.Graph();\r\n    const settings = Object.assign({}, this.defaultSettings, this.settings);\r\n    this.dagreGraph.setGraph({\r\n      rankdir: settings.orientation,\r\n      marginx: settings.marginX,\r\n      marginy: settings.marginY,\r\n      edgesep: settings.edgePadding,\r\n      ranksep: settings.rankPadding,\r\n      nodesep: settings.nodePadding,\r\n      align: settings.align,\r\n      acyclicer: settings.acyclicer,\r\n      ranker: settings.ranker\r\n    });\r\n\r\n    // Default to assigning a new object as a label for each new edge.\r\n    this.dagreGraph.setDefaultEdgeLabel(() => {\r\n      return {\r\n        /* empty */\r\n      };\r\n    });\r\n\r\n    this.dagreNodes = graph.nodes.map(n => {\r\n      const node: any = Object.assign({}, n);\r\n      node.width = n.dimension.width;\r\n      node.height = n.dimension.height;\r\n      node.x = n.position.x;\r\n      node.y = n.position.y;\r\n      return node;\r\n    });\r\n\r\n    this.dagreEdges = graph.edges.map(l => {\r\n      const newLink: any = Object.assign({}, l);\r\n      if (!newLink.id) {\r\n        newLink.id = id();\r\n      }\r\n      return newLink;\r\n    });\r\n\r\n    for (const node of this.dagreNodes) {\r\n      if (!node.width) {\r\n        node.width = 20;\r\n      }\r\n      if (!node.height) {\r\n        node.height = 30;\r\n      }\r\n\r\n      // update dagre\r\n      this.dagreGraph.setNode(node.id, node);\r\n    }\r\n\r\n    // update dagre\r\n    for (const edge of this.dagreEdges) {\r\n      this.dagreGraph.setEdge(edge.source, edge.target);\r\n    }\r\n\r\n    return this.dagreGraph;\r\n  }\r\n}\r\n","import { Layout } from '../../models/layout.model';\r\nimport { Graph } from '../../models/graph.model';\r\nimport { id } from '../../utils/id';\r\nimport * as dagre from 'dagre';\r\nimport { Edge } from '../../models/edge.model';\r\nimport { Node, ClusterNode } from '../../models/node.model';\r\nimport { DagreSettings, Orientation } from './dagre';\r\n\r\nexport class DagreClusterLayout implements Layout {\r\n  defaultSettings: DagreSettings = {\r\n    orientation: Orientation.LEFT_TO_RIGHT,\r\n    marginX: 20,\r\n    marginY: 20,\r\n    edgePadding: 100,\r\n    rankPadding: 100,\r\n    nodePadding: 50\r\n  };\r\n  settings: DagreSettings = {};\r\n\r\n  dagreGraph: any;\r\n  dagreNodes: Node[];\r\n  dagreClusters: ClusterNode[];\r\n  dagreEdges: any;\r\n\r\n  run(graph: Graph): Graph {\r\n    this.createDagreGraph(graph);\r\n    dagre.layout(this.dagreGraph);\r\n\r\n    graph.edgeLabels = this.dagreGraph._edgeLabels;\r\n\r\n    const dagreToOutput = node => {\r\n      const dagreNode = this.dagreGraph._nodes[node.id];\r\n      return {\r\n        ...node,\r\n        position: {\r\n          x: dagreNode.x,\r\n          y: dagreNode.y\r\n        },\r\n        dimension: {\r\n          width: dagreNode.width,\r\n          height: dagreNode.height\r\n        }\r\n      };\r\n    };\r\n    graph.clusters = (graph.clusters || []).map(dagreToOutput);\r\n    graph.nodes = graph.nodes.map(dagreToOutput);\r\n\r\n    return graph;\r\n  }\r\n\r\n  updateEdge(graph: Graph, edge: Edge): Graph {\r\n    const sourceNode = graph.nodes.find(n => n.id === edge.source);\r\n    const targetNode = graph.nodes.find(n => n.id === edge.target);\r\n\r\n    // determine new arrow position\r\n    const dir = sourceNode.position.y <= targetNode.position.y ? -1 : 1;\r\n    const startingPoint = {\r\n      x: sourceNode.position.x,\r\n      y: sourceNode.position.y - dir * (sourceNode.dimension.height / 2)\r\n    };\r\n    const endingPoint = {\r\n      x: targetNode.position.x,\r\n      y: targetNode.position.y + dir * (targetNode.dimension.height / 2)\r\n    };\r\n\r\n    // generate new points\r\n    edge.points = [startingPoint, endingPoint];\r\n    return graph;\r\n  }\r\n\r\n  createDagreGraph(graph: Graph): any {\r\n    this.dagreGraph = new dagre.graphlib.Graph({ compound: true });\r\n    const settings = Object.assign({}, this.defaultSettings, this.settings);\r\n    this.dagreGraph.setGraph({\r\n      rankdir: settings.orientation,\r\n      marginx: settings.marginX,\r\n      marginy: settings.marginY,\r\n      edgesep: settings.edgePadding,\r\n      ranksep: settings.rankPadding,\r\n      nodesep: settings.nodePadding,\r\n      align: settings.align,\r\n      acyclicer: settings.acyclicer,\r\n      ranker: settings.ranker\r\n    });\r\n\r\n    // Default to assigning a new object as a label for each new edge.\r\n    this.dagreGraph.setDefaultEdgeLabel(() => {\r\n      return {\r\n        /* empty */\r\n      };\r\n    });\r\n\r\n    this.dagreNodes = graph.nodes.map((n: Node) => {\r\n      const node: any = Object.assign({}, n);\r\n      node.width = n.dimension.width;\r\n      node.height = n.dimension.height;\r\n      node.x = n.position.x;\r\n      node.y = n.position.y;\r\n      return node;\r\n    });\r\n\r\n    this.dagreClusters = graph.clusters || [];\r\n\r\n    this.dagreEdges = graph.edges.map(l => {\r\n      const newLink: any = Object.assign({}, l);\r\n      if (!newLink.id) {\r\n        newLink.id = id();\r\n      }\r\n      return newLink;\r\n    });\r\n\r\n    for (const node of this.dagreNodes) {\r\n      this.dagreGraph.setNode(node.id, node);\r\n    }\r\n\r\n    for (const cluster of this.dagreClusters) {\r\n      this.dagreGraph.setNode(cluster.id, cluster);\r\n      cluster.childNodeIds.forEach(childNodeId => {\r\n        this.dagreGraph.setParent(childNodeId, cluster.id);\r\n      });\r\n    }\r\n\r\n    // update dagre\r\n    for (const edge of this.dagreEdges) {\r\n      this.dagreGraph.setEdge(edge.source, edge.target);\r\n    }\r\n\r\n    return this.dagreGraph;\r\n  }\r\n}\r\n","import { Layout } from '../../models/layout.model';\r\nimport { Graph } from '../../models/graph.model';\r\nimport { id } from '../../utils/id';\r\nimport * as dagre from 'dagre';\r\nimport { Edge } from '../../models/edge.model';\r\n\r\nexport enum Orientation {\r\n  LEFT_TO_RIGHT = 'LR',\r\n  RIGHT_TO_LEFT = 'RL',\r\n  TOP_TO_BOTTOM = 'TB',\r\n  BOTTOM_TO_TOM = 'BT'\r\n}\r\nexport enum Alignment {\r\n  CENTER = 'C',\r\n  UP_LEFT = 'UL',\r\n  UP_RIGHT = 'UR',\r\n  DOWN_LEFT = 'DL',\r\n  DOWN_RIGHT = 'DR'\r\n}\r\n\r\nexport interface DagreSettings {\r\n  orientation?: Orientation;\r\n  marginX?: number;\r\n  marginY?: number;\r\n  edgePadding?: number;\r\n  rankPadding?: number;\r\n  nodePadding?: number;\r\n  align?: Alignment;\r\n  acyclicer?: 'greedy' | undefined;\r\n  ranker?: 'network-simplex' | 'tight-tree' | 'longest-path';\r\n}\r\n\r\nexport interface DagreNodesOnlySettings extends DagreSettings {\r\n  curveDistance?: number;\r\n}\r\n\r\nconst DEFAULT_EDGE_NAME = '\\x00';\r\nconst GRAPH_NODE = '\\x00';\r\nconst EDGE_KEY_DELIM = '\\x01';\r\n\r\nexport class DagreNodesOnlyLayout implements Layout {\r\n  defaultSettings: DagreNodesOnlySettings = {\r\n    orientation: Orientation.LEFT_TO_RIGHT,\r\n    marginX: 20,\r\n    marginY: 20,\r\n    edgePadding: 100,\r\n    rankPadding: 100,\r\n    nodePadding: 50,\r\n    curveDistance: 20\r\n  };\r\n  settings: DagreNodesOnlySettings = {};\r\n\r\n  dagreGraph: any;\r\n  dagreNodes: any;\r\n  dagreEdges: any;\r\n\r\n  run(graph: Graph): Graph {\r\n    this.createDagreGraph(graph);\r\n    dagre.layout(this.dagreGraph);\r\n\r\n    graph.edgeLabels = this.dagreGraph._edgeLabels;\r\n\r\n    for (const dagreNodeId in this.dagreGraph._nodes) {\r\n      const dagreNode = this.dagreGraph._nodes[dagreNodeId];\r\n      const node = graph.nodes.find(n => n.id === dagreNode.id);\r\n      node.position = {\r\n        x: dagreNode.x,\r\n        y: dagreNode.y\r\n      };\r\n      node.dimension = {\r\n        width: dagreNode.width,\r\n        height: dagreNode.height\r\n      };\r\n    }\r\n    for (const edge of graph.edges) {\r\n      this.updateEdge(graph, edge);\r\n    }\r\n\r\n    return graph;\r\n  }\r\n\r\n  updateEdge(graph: Graph, edge: Edge): Graph {\r\n    const sourceNode = graph.nodes.find(n => n.id === edge.source);\r\n    const targetNode = graph.nodes.find(n => n.id === edge.target);\r\n    const rankAxis: 'x' | 'y' = this.settings.orientation === 'BT' || this.settings.orientation === 'TB' ? 'y' : 'x';\r\n    const orderAxis: 'x' | 'y' = rankAxis === 'y' ? 'x' : 'y';\r\n    const rankDimension = rankAxis === 'y' ? 'height' : 'width';\r\n    // determine new arrow position\r\n    const dir = sourceNode.position[rankAxis] <= targetNode.position[rankAxis] ? -1 : 1;\r\n    const startingPoint = {\r\n      [orderAxis]: sourceNode.position[orderAxis],\r\n      [rankAxis]: sourceNode.position[rankAxis] - dir * (sourceNode.dimension[rankDimension] / 2)\r\n    };\r\n    const endingPoint = {\r\n      [orderAxis]: targetNode.position[orderAxis],\r\n      [rankAxis]: targetNode.position[rankAxis] + dir * (targetNode.dimension[rankDimension] / 2)\r\n    };\r\n\r\n    const curveDistance = this.settings.curveDistance || this.defaultSettings.curveDistance;\r\n    // generate new points\r\n    edge.points = [\r\n      startingPoint,\r\n      {\r\n        [orderAxis]: startingPoint[orderAxis],\r\n        [rankAxis]: startingPoint[rankAxis] - dir * curveDistance\r\n      },\r\n      {\r\n        [orderAxis]: endingPoint[orderAxis],\r\n        [rankAxis]: endingPoint[rankAxis] + dir * curveDistance\r\n      },\r\n      endingPoint\r\n    ];\r\n    const edgeLabelId = `${edge.source}${EDGE_KEY_DELIM}${edge.target}${EDGE_KEY_DELIM}${DEFAULT_EDGE_NAME}`;\r\n    const matchingEdgeLabel = graph.edgeLabels[edgeLabelId];\r\n    if (matchingEdgeLabel) {\r\n      matchingEdgeLabel.points = edge.points;\r\n    }\r\n    return graph;\r\n  }\r\n\r\n  createDagreGraph(graph: Graph): any {\r\n    this.dagreGraph = new dagre.graphlib.Graph();\r\n    const settings = Object.assign({}, this.defaultSettings, this.settings);\r\n    this.dagreGraph.setGraph({\r\n      rankdir: settings.orientation,\r\n      marginx: settings.marginX,\r\n      marginy: settings.marginY,\r\n      edgesep: settings.edgePadding,\r\n      ranksep: settings.rankPadding,\r\n      nodesep: settings.nodePadding,\r\n      align: settings.align,\r\n      acyclicer: settings.acyclicer,\r\n      ranker: settings.ranker\r\n    });\r\n\r\n    // Default to assigning a new object as a label for each new edge.\r\n    this.dagreGraph.setDefaultEdgeLabel(() => {\r\n      return {\r\n        /* empty */\r\n      };\r\n    });\r\n\r\n    this.dagreNodes = graph.nodes.map(n => {\r\n      const node: any = Object.assign({}, n);\r\n      node.width = n.dimension.width;\r\n      node.height = n.dimension.height;\r\n      node.x = n.position.x;\r\n      node.y = n.position.y;\r\n      return node;\r\n    });\r\n\r\n    this.dagreEdges = graph.edges.map(l => {\r\n      const newLink: any = Object.assign({}, l);\r\n      if (!newLink.id) {\r\n        newLink.id = id();\r\n      }\r\n      return newLink;\r\n    });\r\n\r\n    for (const node of this.dagreNodes) {\r\n      if (!node.width) {\r\n        node.width = 20;\r\n      }\r\n      if (!node.height) {\r\n        node.height = 30;\r\n      }\r\n\r\n      // update dagre\r\n      this.dagreGraph.setNode(node.id, node);\r\n    }\r\n\r\n    // update dagre\r\n    for (const edge of this.dagreEdges) {\r\n      this.dagreGraph.setEdge(edge.source, edge.target);\r\n    }\r\n\r\n    return this.dagreGraph;\r\n  }\r\n}\r\n","import { Layout } from '../../models/layout.model';\r\nimport { Graph } from '../../models/graph.model';\r\nimport { Node } from '../../models/node.model';\r\nimport { id } from '../../utils/id';\r\nimport { forceCollide, forceLink, forceManyBody, forceSimulation } from 'd3-force';\r\nimport { Edge } from '../../models/edge.model';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nexport interface D3ForceDirectedSettings {\r\n  force?: any;\r\n  forceLink?: any;\r\n}\r\nexport interface D3Node {\r\n  id?: string;\r\n  x: number;\r\n  y: number;\r\n  width?: number;\r\n  height?: number;\r\n  fx?: number;\r\n  fy?: number;\r\n}\r\nexport interface D3Edge {\r\n  source: string | D3Node;\r\n  target: string | D3Node;\r\n}\r\nexport interface D3Graph {\r\n  nodes: D3Node[];\r\n  edges: D3Edge[];\r\n}\r\nexport interface MergedNode extends D3Node, Node {\r\n  id: string;\r\n}\r\n\r\nexport function toD3Node(maybeNode: string | D3Node): D3Node {\r\n  if (typeof maybeNode === 'string') {\r\n    return {\r\n      id: maybeNode,\r\n      x: 0,\r\n      y: 0\r\n    };\r\n  }\r\n  return maybeNode;\r\n}\r\n\r\nexport class D3ForceDirectedLayout implements Layout {\r\n  defaultSettings: D3ForceDirectedSettings = {\r\n    force: forceSimulation<any>()\r\n      .force('charge', forceManyBody().strength(-150))\r\n      .force('collide', forceCollide(5)),\r\n    forceLink: forceLink<any, any>()\r\n      .id(node => node.id)\r\n      .distance(() => 100)\r\n  };\r\n  settings: D3ForceDirectedSettings = {};\r\n\r\n  inputGraph: Graph;\r\n  outputGraph: Graph;\r\n  d3Graph: D3Graph;\r\n  outputGraph$: Subject<Graph> = new Subject();\r\n\r\n  draggingStart: { x: number; y: number };\r\n\r\n  run(graph: Graph): Observable<Graph> {\r\n    this.inputGraph = graph;\r\n    this.d3Graph = {\r\n      nodes: [...this.inputGraph.nodes.map(n => ({ ...n }))] as any,\r\n      edges: [...this.inputGraph.edges.map(e => ({ ...e }))] as any\r\n    };\r\n    this.outputGraph = {\r\n      nodes: [],\r\n      edges: [],\r\n      edgeLabels: []\r\n    };\r\n    this.outputGraph$.next(this.outputGraph);\r\n    this.settings = Object.assign({}, this.defaultSettings, this.settings);\r\n    if (this.settings.force) {\r\n      this.settings.force\r\n        .nodes(this.d3Graph.nodes)\r\n        .force('link', this.settings.forceLink.links(this.d3Graph.edges))\r\n        .alpha(0.5)\r\n        .restart()\r\n        .on('tick', () => {\r\n          this.outputGraph$.next(this.d3GraphToOutputGraph(this.d3Graph));\r\n        });\r\n    }\r\n\r\n    return this.outputGraph$.asObservable();\r\n  }\r\n\r\n  updateEdge(graph: Graph, edge: Edge): Observable<Graph> {\r\n    const settings = Object.assign({}, this.defaultSettings, this.settings);\r\n    if (settings.force) {\r\n      settings.force\r\n        .nodes(this.d3Graph.nodes)\r\n        .force('link', settings.forceLink.links(this.d3Graph.edges))\r\n        .alpha(0.5)\r\n        .restart()\r\n        .on('tick', () => {\r\n          this.outputGraph$.next(this.d3GraphToOutputGraph(this.d3Graph));\r\n        });\r\n    }\r\n\r\n    return this.outputGraph$.asObservable();\r\n  }\r\n\r\n  d3GraphToOutputGraph(d3Graph: D3Graph): Graph {\r\n    this.outputGraph.nodes = this.d3Graph.nodes.map((node: MergedNode) => ({\r\n      ...node,\r\n      id: node.id || id(),\r\n      position: {\r\n        x: node.x,\r\n        y: node.y\r\n      },\r\n      dimension: {\r\n        width: (node.dimension && node.dimension.width) || 20,\r\n        height: (node.dimension && node.dimension.height) || 20\r\n      },\r\n      transform: `translate(${node.x - ((node.dimension && node.dimension.width) || 20) / 2 || 0}, ${node.y -\r\n        ((node.dimension && node.dimension.height) || 20) / 2 || 0})`\r\n    }));\r\n\r\n    this.outputGraph.edges = this.d3Graph.edges.map(edge => ({\r\n      ...edge,\r\n      source: toD3Node(edge.source).id,\r\n      target: toD3Node(edge.target).id,\r\n      points: [\r\n        {\r\n          x: toD3Node(edge.source).x,\r\n          y: toD3Node(edge.source).y\r\n        },\r\n        {\r\n          x: toD3Node(edge.target).x,\r\n          y: toD3Node(edge.target).y\r\n        }\r\n      ]\r\n    }));\r\n\r\n    this.outputGraph.edgeLabels = this.outputGraph.edges;\r\n    return this.outputGraph;\r\n  }\r\n\r\n  onDragStart(draggingNode: Node, $event: MouseEvent): void {\r\n    this.settings.force.alphaTarget(0.3).restart();\r\n    const node = this.d3Graph.nodes.find(d3Node => d3Node.id === draggingNode.id);\r\n    if (!node) {\r\n      return;\r\n    }\r\n    this.draggingStart = { x: $event.x - node.x, y: $event.y - node.y };\r\n    node.fx = $event.x - this.draggingStart.x;\r\n    node.fy = $event.y - this.draggingStart.y;\r\n  }\r\n\r\n  onDrag(draggingNode: Node, $event: MouseEvent): void {\r\n    if (!draggingNode) {\r\n      return;\r\n    }\r\n    const node = this.d3Graph.nodes.find(d3Node => d3Node.id === draggingNode.id);\r\n    if (!node) {\r\n      return;\r\n    }\r\n    node.fx = $event.x - this.draggingStart.x;\r\n    node.fy = $event.y - this.draggingStart.y;\r\n  }\r\n\r\n  onDragEnd(draggingNode: Node, $event: MouseEvent): void {\r\n    if (!draggingNode) {\r\n      return;\r\n    }\r\n    const node = this.d3Graph.nodes.find(d3Node => d3Node.id === draggingNode.id);\r\n    if (!node) {\r\n      return;\r\n    }\r\n\r\n    this.settings.force.alphaTarget(0);\r\n    node.fx = undefined;\r\n    node.fy = undefined;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Layout } from '../../models/layout.model';\r\nimport { DagreLayout } from './dagre';\r\nimport { DagreClusterLayout } from './dagreCluster';\r\nimport { DagreNodesOnlyLayout } from './dagreNodesOnly';\r\nimport { D3ForceDirectedLayout } from './d3ForceDirected';\r\n\r\nconst layouts = {\r\n  dagre: DagreLayout,\r\n  dagreCluster: DagreClusterLayout,\r\n  dagreNodesOnly: DagreNodesOnlyLayout,\r\n  d3: D3ForceDirectedLayout\r\n};\r\n\r\n@Injectable()\r\nexport class LayoutService {\r\n  getLayout(name: string): Layout {\r\n    if (layouts[name]) {\r\n      return new layouts[name]();\r\n    } else {\r\n      throw new Error(`Unknown layout type '${name}'`);\r\n    }\r\n  }\r\n}\r\n","// rename transition due to conflict with d3 transition\r\nimport { animate, style, transition as ngTransition, trigger } from '@angular/animations';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewChildren,\r\n  ViewEncapsulation,\r\n  NgZone,\r\n  ChangeDetectorRef,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport {\r\n  BaseChartComponent,\r\n  ChartComponent,\r\n  ColorHelper,\r\n  ViewDimensions,\r\n  calculateViewDimensions\r\n} from '@swimlane/ngx-charts';\r\nimport { select } from 'd3-selection';\r\nimport * as shape from 'd3-shape';\r\nimport 'd3-transition';\r\nimport { Observable, Subscription, of } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport { identity, scale, toSVG, transform, translate } from 'transformation-matrix';\r\nimport { Layout } from '../models/layout.model';\r\nimport { LayoutService } from './layouts/layout.service';\r\nimport { Edge } from '../models/edge.model';\r\nimport { Node, ClusterNode } from '../models/node.model';\r\nimport { Graph } from '../models/graph.model';\r\nimport { id } from '../utils/id';\r\n\r\nconsole.log('EL REF', ElementRef);\r\n\r\n/**\r\n * Matrix\r\n */\r\nexport interface Matrix {\r\n  a: number;\r\n  b: number;\r\n  c: number;\r\n  d: number;\r\n  e: number;\r\n  f: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-graph',\r\n  styles: [`.graph{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.graph .edge{stroke:#666;fill:none}.graph .edge .edge-label{stroke:none;font-size:12px;fill:#251e1e}.graph .panning-rect{fill:transparent;cursor:move}.graph .node-group .node:focus{outline:0}.graph .cluster rect{opacity:.2}`],\r\n  template: `\r\n  <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"legend\" [legendOptions]=\"legendOptions\" (legendLabelClick)=\"onClick($event, undefined)\"\r\n  (legendLabelActivate)=\"onActivate($event)\" (legendLabelDeactivate)=\"onDeactivate($event)\" mouseWheel (mouseWheelUp)=\"onZoom($event, 'in')\"\r\n  (mouseWheelDown)=\"onZoom($event, 'out')\">\r\n  <svg:g *ngIf=\"initialized && graph\" [attr.transform]=\"transform\" (touchstart)=\"onTouchStart($event)\" (touchend)=\"onTouchEnd($event)\"\r\n    class=\"graph chart\">\r\n    <defs>\r\n      <ng-template *ngIf=\"defsTemplate\" [ngTemplateOutlet]=\"defsTemplate\">\r\n      </ng-template>\r\n      <svg:path class=\"text-path\" *ngFor=\"let link of graph.edges\" [attr.d]=\"link.textPath\" [attr.id]=\"link.id\">\r\n      </svg:path>\r\n    </defs>\r\n    <svg:rect class=\"panning-rect\" [attr.width]=\"dims.width * 100\" [attr.height]=\"dims.height * 100\" [attr.transform]=\"'translate(' + ((-dims.width || 0) * 50) +',' + ((-dims.height || 0) *50) + ')' \"\r\n      (mousedown)=\"isPanning = true\" />\r\n      <svg:g class=\"clusters\">\r\n        <svg:g #clusterElement *ngFor=\"let node of graph.clusters; trackBy: trackNodeBy\" class=\"node-group\" [id]=\"node.id\" [attr.transform]=\"node.transform\"\r\n          (click)=\"onClick(node,$event)\">\r\n          <ng-template *ngIf=\"clusterTemplate\" [ngTemplateOutlet]=\"clusterTemplate\" [ngTemplateOutletContext]=\"{ $implicit: node }\">\r\n          </ng-template>\r\n          <svg:g *ngIf=\"!clusterTemplate\" class=\"node cluster\">\r\n            <svg:rect [attr.width]=\"node.dimension.width\" [attr.height]=\"node.dimension.height\" [attr.fill]=\"node.data?.color\" />\r\n            <svg:text alignment-baseline=\"central\" [attr.x]=\"10\" [attr.y]=\"node.dimension.height / 2\">{{node.label}}</svg:text>\r\n          </svg:g>\r\n        </svg:g>\r\n      </svg:g>\r\n      <svg:g class=\"links\">\r\n      <svg:g #linkElement *ngFor=\"let link of graph.edges; trackBy: trackLinkBy\" class=\"link-group\" [id]=\"link.id\">\r\n        <ng-template *ngIf=\"linkTemplate\" [ngTemplateOutlet]=\"linkTemplate\" [ngTemplateOutletContext]=\"{ $implicit: link }\">\r\n        </ng-template>\r\n        <svg:path *ngIf=\"!linkTemplate\" class=\"edge\" [attr.d]=\"link.line\" />\r\n      </svg:g>\r\n    </svg:g>\r\n    <svg:g class=\"nodes\">\r\n      <svg:g #nodeElement *ngFor=\"let node of graph.nodes; trackBy: trackNodeBy\" class=\"node-group\" [id]=\"node.id\" [attr.transform]=\"node.transform\"\r\n        (click)=\"onClick(node,$event)\" (mousedown)=\"onNodeMouseDown($event, node)\" (dblclick)=\"onDoubleClick(node,$event)\">\r\n        <ng-template *ngIf=\"nodeTemplate\" [ngTemplateOutlet]=\"nodeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: node }\">\r\n        </ng-template>\r\n        <svg:circle *ngIf=\"!nodeTemplate\" r=\"10\" [attr.cx]=\"node.dimension.width / 2\" [attr.cy]=\"node.dimension.height / 2\" [attr.fill]=\"node.data?.color\"\r\n        />\r\n      </svg:g>\r\n    </svg:g>\r\n  </svg:g>\r\n</ngx-charts-chart>\r\n  `,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [trigger('link', [ngTransition('* => *', [animate(500, style({ transform: '*' }))])])]\r\n})\r\nexport class GraphComponent extends BaseChartComponent implements OnInit, OnChanges, OnDestroy, AfterViewInit {\r\n  @Input()\r\n  legend: boolean = false;\r\n\r\n  @Input()\r\n  nodes: Node[] = [];\r\n\r\n  @Input()\r\n  clusters: ClusterNode[] = [];\r\n\r\n  @Input()\r\n  links: Edge[] = [];\r\n\r\n  @Input()\r\n  activeEntries: any[] = [];\r\n\r\n  @Input()\r\n  curve: any;\r\n\r\n  @Input()\r\n  draggingEnabled = true;\r\n\r\n  @Input()\r\n  nodeHeight: number;\r\n\r\n  @Input()\r\n  nodeMaxHeight: number;\r\n\r\n  @Input()\r\n  nodeMinHeight: number;\r\n\r\n  @Input()\r\n  nodeWidth: number;\r\n\r\n  @Input()\r\n  nodeMinWidth: number;\r\n\r\n  @Input()\r\n  nodeMaxWidth: number;\r\n\r\n  @Input()\r\n  panningEnabled = true;\r\n\r\n  @Input()\r\n  enableZoom = true;\r\n\r\n  @Input()\r\n  zoomSpeed = 0.1;\r\n\r\n  @Input()\r\n  minZoomLevel = 0.1;\r\n\r\n  @Input()\r\n  maxZoomLevel = 4.0;\r\n\r\n  @Input()\r\n  autoZoom = false;\r\n\r\n  @Input()\r\n  panOnZoom = true;\r\n\r\n  @Input()\r\n  autoCenter = false;\r\n\r\n  @Input()\r\n  update$: Observable<any>;\r\n\r\n  @Input()\r\n  center$: Observable<any>;\r\n\r\n  @Input()\r\n  zoomToFit$: Observable<any>;\r\n\r\n  @Input()\r\n  layout: string | Layout;\r\n\r\n  @Input()\r\n  layoutSettings: any;\r\n\r\n  @Output()\r\n  activate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output()\r\n  deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('linkTemplate')\r\n  linkTemplate: TemplateRef<any>;\r\n\r\n  @ContentChild('nodeTemplate')\r\n  nodeTemplate: TemplateRef<any>;\r\n\r\n  @ContentChild('clusterTemplate')\r\n  clusterTemplate: TemplateRef<any>;\r\n\r\n  @ContentChild('defsTemplate')\r\n  defsTemplate: TemplateRef<any>;\r\n\r\n  @ViewChild(ChartComponent, { read: ElementRef })\r\n  chart: ElementRef;\r\n\r\n  @ViewChildren('nodeElement')\r\n  nodeElements: QueryList<ElementRef>;\r\n\r\n  @ViewChildren('linkElement')\r\n  linkElements: QueryList<ElementRef>;\r\n\r\n  graphSubscription: Subscription = new Subscription();\r\n  subscriptions: Subscription[] = [];\r\n  colors: ColorHelper;\r\n  dims: ViewDimensions;\r\n  margin = [0, 0, 0, 0];\r\n  results = [];\r\n  seriesDomain: any;\r\n  transform: string;\r\n  legendOptions: any;\r\n  isPanning = false;\r\n  isDragging = false;\r\n  draggingNode: Node;\r\n  initialized = false;\r\n  graph: Graph;\r\n  graphDims: any = { width: 0, height: 0 };\r\n  _oldLinks: Edge[] = [];\r\n  transformationMatrix: Matrix = identity();\r\n  _touchLastX = null;\r\n  _touchLastY = null;\r\n\r\n  zoomBefore = 1;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    public zone: NgZone,\r\n    public cd: ChangeDetectorRef,\r\n    private layoutService: LayoutService\r\n  ) {\r\n    super(el, zone, cd);\r\n  }\r\n\r\n  @Input()\r\n  groupResultsBy: (node: any) => string = node => node.label;\r\n\r\n  /**\r\n   * Get the current zoom level\r\n   */\r\n  get zoomLevel() {\r\n    return this.transformationMatrix.a;\r\n  }\r\n\r\n  /**\r\n   * Set the current zoom level\r\n   */\r\n  @Input('zoomLevel')\r\n  set zoomLevel(level) {\r\n    this.zoomTo(Number(level));\r\n  }\r\n\r\n  /**\r\n   * Get the current `x` position of the graph\r\n   */\r\n  get panOffsetX() {\r\n    return this.transformationMatrix.e;\r\n  }\r\n\r\n  /**\r\n   * Set the current `x` position of the graph\r\n   */\r\n  @Input('panOffsetX')\r\n  set panOffsetX(x) {\r\n    this.panTo(Number(x), null);\r\n  }\r\n\r\n  /**\r\n   * Get the current `y` position of the graph\r\n   */\r\n  get panOffsetY() {\r\n    return this.transformationMatrix.f;\r\n  }\r\n\r\n  /**\r\n   * Set the current `y` position of the graph\r\n   */\r\n  @Input('panOffsetY')\r\n  set panOffsetY(y) {\r\n    this.panTo(null, Number(y));\r\n  }\r\n\r\n  /**\r\n   * Angular lifecycle event\r\n   *\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  ngOnInit(): void {\r\n    if (this.update$) {\r\n      this.subscriptions.push(\r\n        this.update$.subscribe(() => {\r\n          this.update();\r\n        })\r\n      );\r\n    }\r\n\r\n    if (this.center$) {\r\n      this.subscriptions.push(\r\n        this.center$.subscribe(() => {\r\n          this.center();\r\n        })\r\n      );\r\n    }\r\n    if (this.zoomToFit$) {\r\n      this.subscriptions.push(\r\n        this.zoomToFit$.subscribe(() => {\r\n          this.zoomToFit();\r\n        })\r\n      );\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log(changes);\r\n    const { layout, layoutSettings, nodes, clusters, links } = changes;\r\n    this.setLayout(this.layout);\r\n    if (layoutSettings) {\r\n      this.setLayoutSettings(this.layoutSettings);\r\n    }\r\n    if (nodes || clusters || links) {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  setLayout(layout: string | Layout): void {\r\n    this.initialized = false;\r\n    if (!layout) {\r\n      layout = 'dagre';\r\n    }\r\n    if (typeof layout === 'string') {\r\n      this.layout = this.layoutService.getLayout(layout);\r\n      this.setLayoutSettings(this.layoutSettings);\r\n    }\r\n  }\r\n\r\n  setLayoutSettings(settings: any): void {\r\n    if (this.layout && typeof this.layout !== 'string') {\r\n      this.layout.settings = settings;\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Angular lifecycle event\r\n   *\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n    for (const sub of this.subscriptions) {\r\n      sub.unsubscribe();\r\n    }\r\n    this.subscriptions = null;\r\n  }\r\n\r\n  /**\r\n   * Angular lifecycle event\r\n   *\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  ngAfterViewInit(): void {\r\n    super.ngAfterViewInit();\r\n    setTimeout(() => this.update());\r\n  }\r\n\r\n  /**\r\n   * Base class update implementation for the dag graph\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  update(): void {\r\n    super.update();\r\n\r\n    if (!this.curve) {\r\n      this.curve = shape.curveBundle.beta(1);\r\n    }\r\n\r\n    this.zone.run(() => {\r\n      this.dims = calculateViewDimensions({\r\n        width: this.width,\r\n        height: this.height,\r\n        margins: this.margin,\r\n        showLegend: this.legend\r\n      });\r\n\r\n      this.seriesDomain = this.getSeriesDomain();\r\n      this.setColors();\r\n      this.legendOptions = this.getLegendOptions();\r\n\r\n      this.createGraph();\r\n\r\n      // If zoom isn't 1, then nodes sometimes don't render in correct size\r\n      // zooming to 1 fixes this\r\n      this.saveZoomBeforeLoad();\r\n      this.zoomLevel = 1;\r\n      this.updateTransform();\r\n      this.initialized = true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Draws the graph using dagre layouts\r\n   *\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  draw(): void {\r\n    if (!this.layout || typeof this.layout === 'string') {\r\n      return;\r\n    }\r\n    // Calc view dims for the nodes\r\n    this.applyNodeDimensions();\r\n\r\n    // Recalc the layout\r\n    const result = this.layout.run(this.graph);\r\n    const result$ = result instanceof Observable ? result : of(result);\r\n    this.graphSubscription.add(result$.subscribe(graph => {\r\n      this.graph = graph;\r\n      this.tick();\r\n    }));\r\n    result$\r\n      .pipe(first(graph => graph.nodes.length > 0))\r\n      .subscribe(() => this.applyNodeDimensions());\r\n\r\n    this.restoreZoomBeforeLoad();\r\n  }\r\n\r\n  tick() {\r\n    // Transposes view options to the node\r\n    this.graph.nodes.map(n => {\r\n      n.transform = `translate(${\r\n        n.position.x - n.dimension.width / 2 || 0}, ${n.position.y - n.dimension.height / 2 || 0\r\n        })`;\r\n      if (!n.data) {\r\n        n.data = {};\r\n      }\r\n      if (!n.data.color) {\r\n\r\n        n.data = {\r\n          color: this.colors.getColor(this.groupResultsBy(n))\r\n        };\r\n      }\r\n    });\r\n    (this.graph.clusters || []).map(n => {\r\n      n.transform = `translate(${\r\n        n.position.x - n.dimension.width / 2 || 0}, ${n.position.y - n.dimension.height / 2 || 0\r\n        })`;\r\n      if (!n.data) {\r\n        n.data = {};\r\n      }\r\n      if (!n.data.color) {\r\n\r\n        n.data = {\r\n          color: this.colors.getColor(this.groupResultsBy(n))\r\n        };\r\n      }\r\n    });\r\n\r\n    // Update the labels to the new positions\r\n    const newLinks = [];\r\n    for (const edgeLabelId in this.graph.edgeLabels) {\r\n      const edgeLabel = this.graph.edgeLabels[edgeLabelId];\r\n\r\n      const normKey = edgeLabelId.replace(/[^\\w-]*/g, '');\r\n      let oldLink = this._oldLinks.find(ol => `${ol.source}${ol.target}` === normKey);\r\n      if (!oldLink) {\r\n        oldLink = this.graph.edges.find(nl => `${nl.source}${nl.target}` === normKey) || edgeLabel;\r\n      }\r\n\r\n      oldLink.oldLine = oldLink.line;\r\n\r\n      const points = edgeLabel.points;\r\n      const line = this.generateLine(points);\r\n\r\n      const newLink = Object.assign({}, oldLink);\r\n      newLink.line = line;\r\n      newLink.points = points;\r\n\r\n      const textPos = points[Math.floor(points.length / 2)];\r\n      if (textPos) {\r\n        newLink.textTransform = `translate(${textPos.x || 0},${textPos.y || 0})`;\r\n      }\r\n\r\n      newLink.textAngle = 0;\r\n      if (!newLink.oldLine) {\r\n        newLink.oldLine = newLink.line;\r\n      }\r\n\r\n      this.calcDominantBaseline(newLink);\r\n      newLinks.push(newLink);\r\n    }\r\n\r\n    this.graph.edges = newLinks;\r\n\r\n    // Map the old links for animations\r\n    if (this.graph.edges) {\r\n      this._oldLinks = this.graph.edges.map(l => {\r\n        const newL = Object.assign({}, l);\r\n        newL.oldLine = l.line;\r\n        return newL;\r\n      });\r\n    }\r\n\r\n    // Calculate the height/width total\r\n    this.graphDims.width = Math.max(...this.graph.nodes.map(n => n.position.x + n.dimension.width));\r\n    this.graphDims.height = Math.max(...this.graph.nodes.map(n => n.position.y + n.dimension.height));\r\n\r\n    if (this.autoZoom) {\r\n      this.zoomToFit();\r\n    }\r\n\r\n    if (this.autoCenter) {\r\n      // Auto-center when rendering\r\n      this.center();\r\n    }\r\n\r\n    requestAnimationFrame(() => this.redrawLines());\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Measures the node element and applies the dimensions\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  applyNodeDimensions(): void {\r\n    if (this.nodeElements && this.nodeElements.length) {\r\n      this.nodeElements.map(elem => {\r\n        const nativeElement = elem.nativeElement;\r\n        const node = this.graph.nodes.find(n => n.id === nativeElement.id);\r\n\r\n        // calculate the height\r\n        let dims;\r\n        try {\r\n          dims = nativeElement.getBoundingClientRect();\r\n        } catch (ex) {\r\n          // Skip drawing if element is not displayed - Firefox would throw an error here\r\n          return;\r\n        }\r\n        if (this.nodeHeight) {\r\n          node.dimension.height = this.nodeHeight;\r\n        } else {\r\n          node.dimension.height = dims.height;\r\n        }\r\n\r\n        if (this.nodeMaxHeight) {\r\n          node.dimension.height = Math.max(node.dimension.height, this.nodeMaxHeight);\r\n        }\r\n        if (this.nodeMinHeight) {\r\n          node.dimension.height = Math.min(node.dimension.height, this.nodeMinHeight);\r\n        }\r\n\r\n        if (this.nodeWidth) {\r\n          node.dimension.width = this.nodeWidth;\r\n        } else {\r\n          // calculate the width\r\n          if (nativeElement.getElementsByTagName('text').length) {\r\n            let textDims;\r\n            try {\r\n              textDims = nativeElement.getElementsByTagName('text')[0].getBBox();\r\n            } catch (ex) {\r\n              // Skip drawing if element is not displayed - Firefox would throw an error here\r\n              return;\r\n            }\r\n            node.dimension.width = textDims.width + 20;\r\n          } else {\r\n            node.dimension.width = dims.width;\r\n          }\r\n        }\r\n\r\n        if (this.nodeMaxWidth) {\r\n          node.dimension.width = Math.max(node.dimension.width, this.nodeMaxWidth);\r\n        }\r\n        if (this.nodeMinWidth) {\r\n          node.dimension.width = Math.min(node.dimension.width, this.nodeMinWidth);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Redraws the lines when dragged or viewport updated\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  redrawLines(_animate = true): void {\r\n    this.linkElements.map(linkEl => {\r\n      const edge = this.graph.edges.find(lin => lin.id === linkEl.nativeElement.id);\r\n\r\n      if (edge) {\r\n        const linkSelection = select(linkEl.nativeElement).select('.line');\r\n        linkSelection\r\n          .attr('d', edge.oldLine)\r\n          .transition()\r\n          .duration(_animate ? 500 : 0)\r\n          .attr('d', edge.line);\r\n\r\n        const textPathSelection = select(this.chartElement.nativeElement).select(`#${edge.id}`);\r\n        textPathSelection\r\n          .attr('d', edge.oldTextPath)\r\n          .transition()\r\n          .duration(_animate ? 500 : 0)\r\n          .attr('d', edge.textPath);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates the dagre graph engine\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  createGraph(): void {\r\n    this.graphSubscription.unsubscribe();\r\n    this.graphSubscription = new Subscription();\r\n    const initializeNode = n => {\r\n      if (!n.id) {\r\n        n.id = id();\r\n      }\r\n      n.dimension = {\r\n        width: 30,\r\n        height: 30\r\n      };\r\n      n.position = {\r\n        x: 0,\r\n        y: 0\r\n      };\r\n      n.data = n.data ? n.data : {};\r\n      return n;\r\n    };\r\n    this.graph = {\r\n      nodes: [...this.nodes].map(initializeNode),\r\n      clusters: [...(this.clusters || [])].map(initializeNode),\r\n      edges: [...this.links].map(e => {\r\n        if (!e.id) {\r\n          e.id = id();\r\n        }\r\n        return e;\r\n      })\r\n    };\r\n\r\n    requestAnimationFrame(() => this.draw());\r\n  }\r\n\r\n  /**\r\n   * Calculate the text directions / flipping\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  calcDominantBaseline(link): void {\r\n    const firstPoint = link.points[0];\r\n    const lastPoint = link.points[link.points.length - 1];\r\n    link.oldTextPath = link.textPath;\r\n\r\n    if (lastPoint.x < firstPoint.x) {\r\n      link.dominantBaseline = 'text-before-edge';\r\n\r\n      // reverse text path for when its flipped upside down\r\n      link.textPath = this.generateLine([...link.points].reverse());\r\n    } else {\r\n      link.dominantBaseline = 'text-after-edge';\r\n      link.textPath = link.line;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate the new line path\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  generateLine(points): any {\r\n    const lineFunction = shape\r\n      .line<any>()\r\n      .x(d => d.x)\r\n      .y(d => d.y)\r\n      .curve(this.curve);\r\n    return lineFunction(points);\r\n  }\r\n\r\n  /**\r\n   * Zoom was invoked from event\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  onZoom($event: MouseEvent, direction): void {\r\n    const zoomFactor = 1 + (direction === 'in' ? this.zoomSpeed : -this.zoomSpeed);\r\n\r\n    // Check that zooming wouldn't put us out of bounds\r\n    const newZoomLevel = this.zoomLevel * zoomFactor;\r\n    if (newZoomLevel <= this.minZoomLevel || newZoomLevel >= this.maxZoomLevel) {\r\n      return;\r\n    }\r\n\r\n    // Check if zooming is enabled or not\r\n    if (!this.enableZoom) {\r\n      return;\r\n    }\r\n\r\n    if (this.panOnZoom === true && $event) {\r\n      // Absolute mouse X/Y on the screen\r\n      const mouseX = $event.clientX;\r\n      const mouseY = $event.clientY;\r\n\r\n      // Transform the mouse X/Y into a SVG X/Y\r\n      const svg = this.chart.nativeElement.querySelector('svg');\r\n      const svgGroup = svg.querySelector('g.chart');\r\n\r\n      const point = svg.createSVGPoint();\r\n      point.x = mouseX;\r\n      point.y = mouseY;\r\n      const svgPoint = point.matrixTransform(svgGroup.getScreenCTM().inverse());\r\n\r\n      // Panzoom\r\n      const NO_ZOOM_LEVEL = 1;\r\n      this.pan(svgPoint.x, svgPoint.y, NO_ZOOM_LEVEL);\r\n      this.zoom(zoomFactor);\r\n      this.pan(-svgPoint.x, -svgPoint.y, NO_ZOOM_LEVEL);\r\n    } else {\r\n      this.zoom(zoomFactor);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Pan by x/y\r\n   *\r\n   */\r\n  pan(x: number, y: number, zoomLevel: number = this.zoomLevel): void {\r\n    this.transformationMatrix = transform(this.transformationMatrix, translate(x / zoomLevel, y / zoomLevel));\r\n\r\n    this.updateTransform();\r\n  }\r\n\r\n  /**\r\n   * Pan to a fixed x/y\r\n   *\r\n   */\r\n  panTo(x: number, y: number): void {\r\n    this.transformationMatrix.e = x === null || x === undefined || isNaN(x) ? this.transformationMatrix.e : Number(x);\r\n    this.transformationMatrix.f = y === null || y === undefined || isNaN(y) ? this.transformationMatrix.f : Number(y);\r\n\r\n    this.updateTransform();\r\n  }\r\n\r\n  /**\r\n   * Zoom by a factor\r\n   *\r\n   */\r\n  zoom(factor: number): void {\r\n    this.transformationMatrix = transform(this.transformationMatrix, scale(factor, factor));\r\n\r\n    this.updateTransform();\r\n  }\r\n\r\n  /**\r\n   * Zoom to a fixed level\r\n   *\r\n   */\r\n  zoomTo(level: number): void {\r\n    this.transformationMatrix.a = isNaN(level) ? this.transformationMatrix.a : Number(level);\r\n    this.transformationMatrix.d = isNaN(level) ? this.transformationMatrix.d : Number(level);\r\n\r\n    this.updateTransform();\r\n  }\r\n\r\n  /**\r\n   * Pan was invoked from event\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  onPan(event): void {\r\n    this.pan(event.movementX, event.movementY);\r\n  }\r\n\r\n  /**\r\n   * Drag was invoked from an event\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  onDrag(event): void {\r\n    if (!this.draggingEnabled) {\r\n      return;\r\n    }\r\n    const node = this.draggingNode;\r\n    if (this.layout && typeof this.layout !== 'string' && this.layout.onDrag) {\r\n      this.layout.onDrag(node, event);\r\n    }\r\n\r\n    node.position.x += event.movementX / this.zoomLevel;\r\n    node.position.y += event.movementY / this.zoomLevel;\r\n\r\n    // move the node\r\n    const x = node.position.x - node.dimension.width / 2;\r\n    const y = node.position.y - node.dimension.height / 2;\r\n    node.transform = `translate(${x}, ${y})`;\r\n\r\n    for (const link of this.graph.edges) {\r\n      if (\r\n        link.target === node.id ||\r\n        link.source === node.id ||\r\n        (link.target as any).id === node.id ||\r\n        (link.source as any).id === node.id\r\n      ) {\r\n        if (this.layout && typeof this.layout !== 'string') {\r\n          const result = this.layout.updateEdge(this.graph, link);\r\n          const result$ = result instanceof Observable ? result : of(result);\r\n          this.graphSubscription.add(\r\n            result$.subscribe(graph => {\r\n              this.graph = graph;\r\n              this.redrawEdge(link);\r\n            })\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    this.redrawLines(false);\r\n  }\r\n\r\n  redrawEdge(edge: Edge) {\r\n    const line = this.generateLine(edge.points);\r\n    this.calcDominantBaseline(edge);\r\n    edge.oldLine = edge.line;\r\n    edge.line = line;\r\n  }\r\n\r\n  /**\r\n   * Update the entire view for the new pan position\r\n   *\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  updateTransform(): void {\r\n    this.transform = toSVG(this.transformationMatrix);\r\n  }\r\n\r\n  /**\r\n   * Node was clicked\r\n   *\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  onClick(event, originalEvent): void {\r\n    event.origEvent = originalEvent;\r\n    this.select.emit(event);\r\n  }\r\n\r\n  /**\r\n   * Node was clicked\r\n   *\r\n   */\r\n  onDoubleClick(event, originalEvent): void {\r\n    event.origEvent = originalEvent;\r\n    event.isDoubleClick = true;\r\n    this.select.emit(event);\r\n  }\r\n\r\n  /**\r\n   * Node was focused\r\n   *\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  onActivate(event): void {\r\n    if (this.activeEntries.indexOf(event) > -1) {\r\n      return;\r\n    }\r\n    this.activeEntries = [event, ...this.activeEntries];\r\n    this.activate.emit({ value: event, entries: this.activeEntries });\r\n  }\r\n\r\n  /**\r\n   * Node was defocused\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  onDeactivate(event): void {\r\n    const idx = this.activeEntries.indexOf(event);\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: event, entries: this.activeEntries });\r\n  }\r\n\r\n  /**\r\n   * Get the domain series for the nodes\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  getSeriesDomain(): any[] {\r\n    return this.nodes\r\n      .map(d => this.groupResultsBy(d))\r\n      .reduce((nodes: string[], node): any[] => (nodes.indexOf(node) !== -1 ? nodes : nodes.concat([node])), [])\r\n      .sort();\r\n  }\r\n\r\n  /**\r\n   * Tracking for the link\r\n   *\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  trackLinkBy(index, link): any {\r\n    return link.id;\r\n  }\r\n\r\n  /**\r\n   * Tracking for the node\r\n   *\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  trackNodeBy(index, node): any {\r\n    return node.id;\r\n  }\r\n\r\n  /**\r\n   * Sets the colors the nodes\r\n   *\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  setColors(): void {\r\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.seriesDomain, this.customColors);\r\n  }\r\n\r\n  /**\r\n   * Gets the legend options\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  getLegendOptions(): any {\r\n    return {\r\n      scaleType: 'ordinal',\r\n      domain: this.seriesDomain,\r\n      colors: this.colors\r\n    };\r\n  }\r\n\r\n  /**\r\n   * On mouse move event, used for panning and dragging.\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  @HostListener('document:mousemove', ['$event'])\r\n  onMouseMove($event: MouseEvent): void {\r\n    if (this.isPanning && this.panningEnabled) {\r\n      this.onPan($event);\r\n    } else if (this.isDragging && this.draggingEnabled) {\r\n      this.onDrag($event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On touch start event to enable panning.\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  onTouchStart(event) {\r\n    this._touchLastX = event.changedTouches[0].clientX;\r\n    this._touchLastY = event.changedTouches[0].clientY;\r\n\r\n    this.isPanning = true;\r\n  }\r\n\r\n  /**\r\n   * On touch move event, used for panning.\r\n   *\r\n   */\r\n  @HostListener('document:touchmove', ['$event'])\r\n  onTouchMove($event: TouchEvent): void {\r\n    if (this.isPanning && this.panningEnabled) {\r\n      const clientX = $event.changedTouches[0].clientX;\r\n      const clientY = $event.changedTouches[0].clientY;\r\n      const movementX = clientX - this._touchLastX;\r\n      const movementY = clientY - this._touchLastY;\r\n      this._touchLastX = clientX;\r\n      this._touchLastY = clientY;\r\n\r\n      this.pan(movementX, movementY);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On touch end event to disable panning.\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  onTouchEnd(event) {\r\n    this.isPanning = false;\r\n  }\r\n\r\n  /**\r\n   * On mouse up event to disable panning/dragging.\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  @HostListener('document:mouseup')\r\n  onMouseUp(event: MouseEvent): void {\r\n    this.isDragging = false;\r\n    this.isPanning = false;\r\n    if (this.layout && typeof this.layout !== 'string' && this.layout.onDragEnd) {\r\n      this.layout.onDragEnd(this.draggingNode, event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On node mouse down to kick off dragging\r\n   *\r\n   * @memberOf GraphComponent\r\n   */\r\n  onNodeMouseDown(event: MouseEvent, node: any): void {\r\n    if (!this.draggingEnabled) {\r\n      return;\r\n    }\r\n    this.isDragging = true;\r\n    this.draggingNode = node;\r\n\r\n    if (this.layout && typeof this.layout !== 'string' && this.layout.onDragStart) {\r\n      this.layout.onDragStart(node, event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Center the graph in the viewport\r\n   */\r\n  center(): void {\r\n    this.panTo(\r\n      this.dims.width / 2 - (this.graphDims.width * this.zoomLevel) / 2,\r\n      this.dims.height / 2 - (this.graphDims.height * this.zoomLevel) / 2\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Zooms to fit the entier graph\r\n   */\r\n  zoomToFit(): void {\r\n    const heightZoom = this.dims.height / this.graphDims.height;\r\n    const widthZoom = this.dims.width / this.graphDims.width;\r\n    const zoomLevel = Math.min(heightZoom, widthZoom, 1);\r\n    if (zoomLevel !== this.zoomLevel) {\r\n      this.zoomLevel = zoomLevel;\r\n      this.updateTransform();\r\n    }\r\n  }\r\n\r\n  restoreZoomBeforeLoad(): void {\r\n    if (this.autoZoom) {\r\n      this.zoomToFit();\r\n    } else {\r\n      this.zoomLevel = this.zoomBefore;\r\n    }\r\n  }\r\n\r\n  saveZoomBeforeLoad(): void {\r\n    this.zoomBefore = this.zoomLevel;\r\n  }\r\n}\r\n","import { Directive, Output, HostListener, EventEmitter } from '@angular/core';\r\n\r\n/**\r\n * Mousewheel directive\r\n * https://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\r\n *\r\n * @export\r\n */\r\n@Directive({ selector: '[mouseWheel]' })\r\nexport class MouseWheelDirective {\r\n  @Output()\r\n  mouseWheelUp = new EventEmitter();\r\n  @Output()\r\n  mouseWheelDown = new EventEmitter();\r\n\r\n  @HostListener('mousewheel', ['$event'])\r\n  onMouseWheelChrome(event: any): void {\r\n    this.mouseWheelFunc(event);\r\n  }\r\n\r\n  @HostListener('DOMMouseScroll', ['$event'])\r\n  onMouseWheelFirefox(event: any): void {\r\n    this.mouseWheelFunc(event);\r\n  }\r\n\r\n  @HostListener('onmousewheel', ['$event'])\r\n  onMouseWheelIE(event: any): void {\r\n    this.mouseWheelFunc(event);\r\n  }\r\n\r\n  mouseWheelFunc(event: any): void {\r\n    if (window.event) {\r\n      event = window.event;\r\n    }\r\n\r\n    const delta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\r\n    if (delta > 0) {\r\n      this.mouseWheelUp.emit(event);\r\n    } else if (delta < 0) {\r\n      this.mouseWheelDown.emit(event);\r\n    }\r\n\r\n    // for IE\r\n    event.returnValue = false;\r\n\r\n    // for Chrome and Firefox\r\n    if (event.preventDefault) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { GraphComponent } from './graph.component';\r\nimport { ChartCommonModule } from '@swimlane/ngx-charts';\r\nimport { MouseWheelDirective } from './mouse-wheel.directive';\r\nimport { LayoutService } from './layouts/layout.service';\r\nexport { GraphComponent };\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule],\r\n  declarations: [GraphComponent, MouseWheelDirective],\r\n  exports: [GraphComponent, MouseWheelDirective],\r\n  providers: [LayoutService]\r\n})\r\nexport class GraphModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { GraphModule } from './graph/graph.module';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\n\r\nexport * from './models/index';\r\n\r\n@NgModule({\r\n  imports: [NgxChartsModule],\r\n  exports: [GraphModule]\r\n})\r\nexport class NgxGraphModule {}\r\n"],"names":["dagre.layout","dagre.graphlib","tslib_1.__values","Orientation","forceSimulation","forceManyBody","forceCollide","forceLink","Subject","Injectable","ElementRef","tslib_1.__extends","EventEmitter","Subscription","identity","shape.curveBundle","calculateViewDimensions","Observable","of","first","select","tslib_1.__spread","shape\r\n                .line","transform","translate","scale","toSVG","ColorHelper","Component","ViewEncapsulation","ChangeDetectionStrategy","trigger","ngTransition","animate","style","NgZone","ChangeDetectorRef","Input","Output","ContentChild","ViewChild","ChartComponent","ViewChildren","HostListener","BaseChartComponent","Directive","NgModule","ChartCommonModule","NgxChartsModule"],"mappings":"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"}
